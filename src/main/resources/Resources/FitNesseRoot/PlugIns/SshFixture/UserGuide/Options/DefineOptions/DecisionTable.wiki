---
Test
---
!1 !-SshFixture-! option definition in decision table
In this page is described how to define options in !-SshFixture-! decision tables. When a decision table is used, !-SshFixture-! options must be defined after endpoint.

Note: the dump-options command called in the following tests is available only for the mocked host: ssh-fitnesse.dev.

|import                               |
|com.github.gun88.fitnesse.fixture.ssh|

!2 Define flag/boolean option in table header
Single option (without value) can be used for flag/boolean options (like [[PREFORMATTED][<UserGuide.Options.PreformattedOutput]] or [[IGNORE_CARRIAGE_RETURN][<UserGuide.Options.IgnoreCarriageReturn]]).

|ssh client            |foo/bar@ssh-fitnesse.dev|MY_OPTION|
|command               |output?                           |
|dump-options MY_OPTION|MY_OPTION                         |

!***> code
{{{!-
|import                               |
|com.github.gun88.fitnesse.fixture.ssh|

|ssh client            |foo/bar@ssh-fitnesse.dev|MY_OPTION|
|command               |output?                           |
|dump-options MY_OPTION|MY_OPTION                         |

!define TEST_SYSTEM {slim}
!path ${jsch.jar.path}
!path ${sshFixture.jar.path}
-!}}}
Note: if !-SshFixture-! is not installed as a plugin, remember to set or replace properties: jsch.jar.path, sshFixture.jar.path; with actual paths.

Note: In this example the connection was built via username and password, that are set in plain text in table header. Click [[here][<UserGuide.EndpointDefinition]] to view different authentication and credential storing methods.
*!

!2 Define option with value in table header
When an option with value is defined, the option key must be followed by equal sign and value.

|ssh client            |foo/bar@ssh-fitnesse.dev|MY_OPTION=my-value|
|command               |output?                                    |
|dump-options MY_OPTION|MY_OPTION=my-value                         |

!***> code
{{{!-
|import                               |
|com.github.gun88.fitnesse.fixture.ssh|

|ssh client            |foo/bar@ssh-fitnesse.dev|MY_OPTION=my-value|
|command               |output?                                    |
|dump-options MY_OPTION|MY_OPTION=my-value                         |

!define TEST_SYSTEM {slim}
!path ${jsch.jar.path}
!path ${sshFixture.jar.path}
-!}}}
Note: if !-SshFixture-! is not installed as a plugin, remember to set or replace properties: jsch.jar.path, sshFixture.jar.path; with actual paths.

Note: In this example the connection was built via username and password, that are set in plain text in table header. Click [[here][<UserGuide.EndpointDefinition]] to view different authentication and credential storing methods.
*!

!2 Define option with spaces in table header
When spaces are contained in option value, option value must be quoted.

|ssh client            |foo/bar@ssh-fitnesse.dev|MY_OPTION="my value"|
|command               |output?                                      |
|dump-options MY_OPTION|MY_OPTION=my value                           |

!***> code
{{{!-
|import                               |
|com.github.gun88.fitnesse.fixture.ssh|

|ssh client            |foo/bar@ssh-fitnesse.dev|MY_OPTION="my value"|
|command               |output?                                      |
|dump-options MY_OPTION|MY_OPTION=my value                           |

!define TEST_SYSTEM {slim}
!path ${jsch.jar.path}
!path ${sshFixture.jar.path}
-!}}}
Note: if !-SshFixture-! is not installed as a plugin, remember to set or replace properties: jsch.jar.path, sshFixture.jar.path; with actual paths.

Note: In this example the connection was built via username and password, that are set in plain text in table header. Click [[here][<UserGuide.EndpointDefinition]] to view different authentication and credential storing methods.
*!

!2 Define multiple options in table header
Multiple options in table header must be separated by spaces.

|ssh client              |foo/bar@ssh-fitnesse.dev|MY_OPTION_1 MY_OPTION_2=my-value MY_OPTION_3="my value"|
|command                 |output?                                                                         |
|dump-options MY_OPTION_1|MY_OPTION_1                                                                     |
|dump-options MY_OPTION_2|MY_OPTION_2=my-value                                                            |
|dump-options MY_OPTION_3|MY_OPTION_3=my value                                                            |

!***> code
{{{!-
|import                               |
|com.github.gun88.fitnesse.fixture.ssh|

|ssh client              |foo/bar@ssh-fitnesse.dev|MY_OPTION_1 MY_OPTION_2=my-value MY_OPTION_3="my value"|
|command                 |output?                                                                         |
|dump-options MY_OPTION_1|MY_OPTION_1                                                                     |
|dump-options MY_OPTION_2|MY_OPTION_2=my-value                                                            |
|dump-options MY_OPTION_3|MY_OPTION_3=my value                                                            |

!define TEST_SYSTEM {slim}
!path ${jsch.jar.path}
!path ${sshFixture.jar.path}
-!}}}
Note: if !-SshFixture-! is not installed as a plugin, remember to set or replace properties: jsch.jar.path, sshFixture.jar.path; with actual paths.

Note: In this example the connection was built via username and password, that are set in plain text in table header. Click [[here][<UserGuide.EndpointDefinition]] to view different authentication and credential storing methods.
*!

