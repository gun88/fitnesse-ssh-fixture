---
Test
---
!2 Script Mode
Script table can also be used to define !-SshFixture-! test.

|import                               |
|com.github.gun88.fitnesse.fixture.ssh|

The endpoint string (foo/bar@ssh-fitnesse.dev) can be defined in multiple ways:
 1 Table header
 1 Table body with single string
 1 Table body with multiple parameters
 1 [[VM options][<UserGuide.EndpointDefinition.VmOptions]]
 1 [[properties file][<UserGuide.EndpointDefinition.PropertiesFile]])

To know more about endpoint definition in script table, click [[here][<UserGuide.EndpointDefinition]]. In this page will be used the table header endpoint definition.

Differently from DecisionTableMode, in script mode, the connection must be opened and closed explicitly (it is also possible to close connection, change endpoint )
On table begin, a connection to the defined endpoint will be opened and closed on table end.
The decision table take as input a command string. Its available outputs are:
 1 standard output stream
 1 standard error stream
 1 execution exit code

|script |ssh client|foo/bar@ssh-fitnesse.dev|
|open connection                            |
|execute|echo foo-bar                       |
|check  |output    |foo-bar                 |
|check  |exit code |0                       |
|execute|echo foo-bar 1>&2                  |
|check  |error     |foo-bar                 |
|check  |exit code |0                       |
|execute|exit 123                           |
|check  |exit code |123                     |
|execute|echo foo; echo bar 1>&2; exit 234  |
|check  |output    |foo                     |
|check  |error     |bar                     |
|check  |exit code |234                     |
|close connection                           |

!***> code
{{{!-
|import                               |
|com.github.gun88.fitnesse.fixture.ssh|

|script |ssh client|foo/bar@ssh-fitnesse.dev|
|open connection                            |
|execute|echo foo-bar                       |
|check  |output    |foo-bar                 |
|check  |exit code |0                       |
|execute|echo foo-bar 1>&2                  |
|check  |error     |foo-bar                 |
|check  |exit code |0                       |
|execute|exit 123                           |
|check  |exit code |123                     |
|execute|echo foo; echo bar 1>&2; exit 234  |
|check  |output    |foo                     |
|check  |error     |bar                     |
|check  |exit code |234                     |
|close connection                           |

|ssh client  |foo/bar@ssh-fitnesse.dev|
|command     |output?                 |
|echo foo-bar|foo-bar                 |

|ssh client       |foo/bar@ssh-fitnesse.dev|
|command          |error?                  |
|echo foo-bar 1>&2|foo-bar                 |

|ssh client|foo/bar@ssh-fitnesse.dev|
|command   |exitCode?               |
|exit 123  |123                     |

!define TEST_SYSTEM {slim}
!path ${jsch.jar.path}
!path ${sshFixture.jar.path}
-!}}}
Note: if !-SshFixture-! is not installed as a plugin, remember to set or replace properties: jsch.jar.path, sshFixture.jar.path; with actual paths.

Note: In this example the connection was built via username and password, that are set in plain text in table header. Click [[here][<UserGuide.EndpointDefinition]] to view different authentication and credential storing methods.

*!
